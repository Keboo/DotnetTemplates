name: .NET Core

on:
  push:
    branches: [ main ]
    # Sequence of patterns matched against refs/tags
    paths-ignore:
      - 'README.md'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

defaults:
  run:
    shell: pwsh

env:
  DOTNET_VERSION: 9.x

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v5
       
    - name: Setup .NET
      uses: actions/setup-dotnet@v5
      with:
        global-json-file: global.json

    - name: Build
      run: dotnet pack --configuration Release -o . 
    
    - name: Upload Artifacts
      uses: actions/upload-artifact@v5
      with:
        name: NuGet
        path: ${{ github.workspace }}\*.nupkg

  test-console:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: "Default (slnx with tests)"
            template-args: ""
            check-slnx: true
            check-sln: false
            check-tests: true
            check-github: true
            check-devops: false
          - name: "Legacy sln format"
            template-args: "--sln true"
            check-slnx: false
            check-sln: true
            check-tests: true
            check-github: true
            check-devops: false
          - name: "No tests"
            template-args: "--tests none"
            check-slnx: true
            check-sln: false
            check-tests: false
            check-github: true
            check-devops: false
          - name: "xUnit tests"
            template-args: "--tests xunit"
            check-slnx: true
            check-sln: false
            check-tests: true
            check-github: true
            check-devops: false
          - name: "MSTest tests"
            template-args: "--tests mstest"
            check-slnx: true
            check-sln: false
            check-tests: true
            check-github: true
            check-devops: false
          - name: "TUnit tests"
            template-args: "--tests tunit"
            check-slnx: true
            check-sln: false
            check-tests: true
            check-github: true
            check-devops: false
          - name: "No solution"
            template-args: "--no-sln"
            check-slnx: false
            check-sln: false
            check-tests: true
            check-github: true
            check-devops: false
          - name: "Pipeline GitHub"
            template-args: "--pipeline github"
            check-slnx: true
            check-sln: false
            check-tests: true
            check-github: true
            check-devops: false
          - name: "Pipeline Azure DevOps"
            template-args: "--pipeline azuredevops"
            check-slnx: true
            check-sln: false
            check-tests: true
            check-github: false
            check-devops: true
          - name: "Pipeline None"
            template-args: "--pipeline none"
            check-slnx: true
            check-sln: false
            check-tests: true
            check-github: false
            check-devops: false

    steps:
      - name: Download NuGet Artifacts
        uses: actions/download-artifact@v6
        with:
          name: NuGet

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Test Template - ${{ matrix.name }}
        run: |
          dotnet new install $(Get-ChildItem -Path "Keboo.Dotnet.Templates.*.nupkg").Name
          mkdir TestConsoleApp
          Push-Location TestConsoleApp
          dotnet new keboo.console ${{ matrix.template-args }}
          
      - name: Verify slnx file exists
        if: matrix.check-slnx == true
        run: |
          if (-not (Test-Path "TestConsoleApp/*.slnx")) {
            throw "Expected .slnx file not found"
          }
          Write-Host "Contents of .slnx file:"
          Get-Content TestConsoleApp/*.slnx
          
      - name: Verify sln file exists
        if: matrix.check-sln == true
        run: |
          if (-not (Test-Path "TestConsoleApp/*.sln")) {
            throw "Expected .sln file not found"
          }
          Write-Host "Contents of .sln file:"
          Get-Content TestConsoleApp/*.sln
          
      - name: Verify tests folder exists
        if: matrix.check-tests == true
        run: |
          if (-not (Test-Path "TestConsoleApp/*.Tests")) {
            throw "Expected Tests folder not found"
          }
          
      - name: Verify tests folder does not exist
        if: matrix.check-tests == false
        run: |
          if (Test-Path "TestConsoleApp/*.Tests") {
            throw "Tests folder should not exist"
          }
          
      - name: Verify .github folder exists
        if: matrix.check-github == true
        run: |
          if (-not (Test-Path "TestConsoleApp/.github")) {
            throw "Expected .github folder not found"
          }
          
      - name: Verify .github folder does not exist
        if: matrix.check-github == false
        run: |
          if (Test-Path "TestConsoleApp/.github") {
            throw ".github folder should not exist"
          }
          
      - name: Verify .devops folder exists
        if: matrix.check-devops == true
        run: |
          if (-not (Test-Path "TestConsoleApp/.devops")) {
            throw "Expected .devops folder not found"
          }
          
      - name: Verify .devops folder does not exist
        if: matrix.check-devops == false
        run: |
          if (Test-Path "TestConsoleApp/.devops") {
            throw ".devops folder should not exist"
          }
          
      - name: Build and Test Solution
        if: matrix.check-tests == true && (matrix.check-sln == true || matrix.check-slnx == true)
        run: |
          Push-Location TestConsoleApp
          dotnet build
          dotnet test --no-build
          
      - name: Build Solution
        if: matrix.check-tests == false && (matrix.check-sln == true || matrix.check-slnx == true)
        run: |
          Push-Location TestConsoleApp
          dotnet build
      
      - name: Build Project Only
        if: matrix.check-tests == false && matrix.check-sln == false && matrix.check-slnx == false
        run: |
          Push-Location TestConsoleApp/TestConsoleApp
          dotnet build
      
      - name: Build and Test Project Only
        if: matrix.check-tests == true && matrix.check-sln == false && matrix.check-slnx == false
        run: |
          Push-Location TestConsoleApp/TestConsoleApp
          dotnet build
          Pop-Location
          Push-Location TestConsoleApp/TestConsoleApp.Tests
          dotnet test

  test-wpf:
    runs-on: windows-latest
    needs: build
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: "Default (slnx with tests)"
            template-args: ""
            check-slnx: true
            check-sln: false
            check-tests: true
            check-github: true
            check-devops: false
          - name: "Legacy sln format"
            template-args: "--sln true"
            check-slnx: false
            check-sln: true
            check-tests: true
            check-github: true
            check-devops: false
          - name: "No tests"
            template-args: "--tests none"
            check-slnx: true
            check-sln: false
            check-tests: false
            check-github: true
            check-devops: false
          - name: "xUnit tests"
            template-args: "--tests xunit"
            check-slnx: true
            check-sln: false
            check-tests: true
            check-github: true
            check-devops: false
          - name: "MSTest tests"
            template-args: "--tests mstest"
            check-slnx: true
            check-sln: false
            check-tests: true
            check-github: true
            check-devops: false
          - name: "TUnit tests"
            template-args: "--tests tunit"
            check-slnx: true
            check-sln: false
            check-tests: true
            check-github: true
            check-devops: false
          - name: "No solution"
            template-args: "--no-sln"
            check-slnx: false
            check-sln: false
            check-tests: true
            check-github: true
            check-devops: false
          - name: "Pipeline GitHub"
            template-args: "--pipeline github"
            check-slnx: true
            check-sln: false
            check-tests: true
            check-github: true
            check-devops: false
          - name: "Pipeline Azure DevOps"
            template-args: "--pipeline azuredevops"
            check-slnx: true
            check-sln: false
            check-tests: true
            check-github: false
            check-devops: true
          - name: "Pipeline None"
            template-args: "--pipeline none"
            check-slnx: true
            check-sln: false
            check-tests: true
            check-github: false
            check-devops: false

    steps:
      - name: Download NuGet Artifacts
        uses: actions/download-artifact@v6
        with:
          name: NuGet

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Test Template - ${{ matrix.name }}
        run: |
          dotnet new install $(Get-ChildItem -Path "Keboo.Dotnet.Templates.*.nupkg").Name
          mkdir TestWpfApp
          Push-Location TestWpfApp
          dotnet new keboo.wpf ${{ matrix.template-args }}
          
      - name: Verify slnx file exists
        if: matrix.check-slnx == true
        run: |
          if (-not (Test-Path "TestWpfApp/*.slnx")) {
            throw "Expected .slnx file not found"
          }
          Write-Host "Contents of .slnx file:"
          Get-Content TestWpfApp/*.slnx
          
      - name: Verify sln file exists
        if: matrix.check-sln == true
        run: |
          if (-not (Test-Path "TestWpfApp/*.sln")) {
            throw "Expected .sln file not found"
          }
          Write-Host "Contents of .sln file:"
          Get-Content TestWpfApp/*.sln
          
      - name: Verify tests folder exists
        if: matrix.check-tests == true
        run: |
          if (-not (Test-Path "TestWpfApp/*.Tests")) {
            throw "Expected Tests folder not found"
          }
          
      - name: Verify tests folder does not exist
        if: matrix.check-tests == false
        run: |
          if (Test-Path "TestWpfApp/*.Tests") {
            throw "Tests folder should not exist"
          }
          
      - name: Verify .github folder exists
        if: matrix.check-github == true
        run: |
          if (-not (Test-Path "TestWpfApp/.github")) {
            throw "Expected .github folder not found"
          }
          
      - name: Verify .github folder does not exist
        if: matrix.check-github == false
        run: |
          if (Test-Path "TestWpfApp/.github") {
            throw ".github folder should not exist"
          }
          
      - name: Verify .devops folder exists
        if: matrix.check-devops == true
        run: |
          if (-not (Test-Path "TestWpfApp/.devops")) {
            throw "Expected .devops folder not found"
          }
          
      - name: Verify .devops folder does not exist
        if: matrix.check-devops == false
        run: |
          if (Test-Path "TestWpfApp/.devops") {
            throw ".devops folder should not exist"
          }
          
      - name: Build and Test Solution
        if: matrix.check-tests == true && (matrix.check-sln == true || matrix.check-slnx == true)
        run: |
          Push-Location TestWpfApp
          dotnet build
          dotnet test --no-build
          
      - name: Build Solution
        if: matrix.check-tests == false && (matrix.check-sln == true || matrix.check-slnx == true)
        run: |
          Push-Location TestWpfApp
          dotnet build
      
      - name: Build Project Only
        if: matrix.check-tests == false && matrix.check-sln == false && matrix.check-slnx == false
        run: |
          Push-Location TestWpfApp/TestWpfApp
          dotnet build
      
      - name: Build and Test Project Only
        if: matrix.check-tests == true && matrix.check-sln == false && matrix.check-slnx == false
        run: |
          Push-Location TestWpfApp/TestWpfApp
          dotnet build
          Pop-Location
          Push-Location TestWpfApp/TestWpfApp.Tests
          dotnet test

  test-library:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: "Default (slnx with tests)"
            template-args: ""
            check-slnx: true
            check-sln: false
            check-tests: true
            check-github: true
            check-devops: false
          - name: "Legacy sln format"
            template-args: "--sln true"
            check-slnx: false
            check-sln: true
            check-tests: true
            check-github: true
            check-devops: false
          - name: "No tests"
            template-args: "--tests none"
            check-slnx: true
            check-sln: false
            check-tests: false
            check-github: true
            check-devops: false
          - name: "xUnit tests"
            template-args: "--tests xunit"
            check-slnx: true
            check-sln: false
            check-tests: true
            check-github: true
            check-devops: false
          - name: "MSTest tests"
            template-args: "--tests mstest"
            check-slnx: true
            check-sln: false
            check-tests: true
            check-github: true
            check-devops: false
          - name: "TUnit tests"
            template-args: "--tests tunit"
            check-slnx: true
            check-sln: false
            check-tests: true
            check-github: true
            check-devops: false
          - name: "No solution"
            template-args: "--no-sln"
            check-slnx: false
            check-sln: false
            check-tests: true
            check-github: true
            check-devops: false
          - name: "Pipeline GitHub"
            template-args: "--pipeline github"
            check-slnx: true
            check-sln: false
            check-tests: true
            check-github: true
            check-devops: false
          - name: "Pipeline Azure DevOps"
            template-args: "--pipeline azuredevops"
            check-slnx: true
            check-sln: false
            check-tests: true
            check-github: false
            check-devops: true
          - name: "Pipeline None"
            template-args: "--pipeline none"
            check-slnx: true
            check-sln: false
            check-tests: true
            check-github: false
            check-devops: false

    steps:
      - name: Download NuGet Artifacts
        uses: actions/download-artifact@v6
        with:
          name: NuGet

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Test Template - ${{ matrix.name }}
        run: |
          dotnet new install $(Get-ChildItem -Path "Keboo.Dotnet.Templates.*.nupkg").Name
          mkdir TestLibrary
          Push-Location TestLibrary
          dotnet new keboo.nuget ${{ matrix.template-args }}
          
      - name: Verify slnx file exists
        if: matrix.check-slnx == true
        run: |
          if (-not (Test-Path "TestLibrary/*.slnx")) {
            throw "Expected .slnx file not found"
          }
          Write-Host "Contents of .slnx file:"
          Get-Content TestLibrary/*.slnx
          
      - name: Verify sln file exists
        if: matrix.check-sln == true
        run: |
          if (-not (Test-Path "TestLibrary/*.sln")) {
            throw "Expected .sln file not found"
          }
          Write-Host "Contents of .sln file:"
          Get-Content TestLibrary/*.sln
          
      - name: Verify tests folder exists
        if: matrix.check-tests == true
        run: |
          if (-not (Test-Path "TestLibrary/*.Tests")) {
            throw "Expected Tests folder not found"
          }
          
      - name: Verify tests folder does not exist
        if: matrix.check-tests == false
        run: |
          if (Test-Path "TestLibrary/*.Tests") {
            throw "Tests folder should not exist"
          }
          
      - name: Verify .github folder exists
        if: matrix.check-github == true
        run: |
          if (-not (Test-Path "TestLibrary/.github")) {
            throw "Expected .github folder not found"
          }
          
      - name: Verify .github folder does not exist
        if: matrix.check-github == false
        run: |
          if (Test-Path "TestLibrary/.github") {
            throw ".github folder should not exist"
          }
          
      - name: Verify .devops folder exists
        if: matrix.check-devops == true
        run: |
          if (-not (Test-Path "TestLibrary/.devops")) {
            throw "Expected .devops folder not found"
          }
          
      - name: Verify .devops folder does not exist
        if: matrix.check-devops == false
        run: |
          if (Test-Path "TestLibrary/.devops") {
            throw ".devops folder should not exist"
          }
          
      - name: Build and Test Solution
        if: matrix.check-tests == true && (matrix.check-sln == true || matrix.check-slnx == true)
        run: |
          Push-Location TestLibrary
          dotnet build
          dotnet test --no-build
          dotnet pack --configuration Release -o ./NuGet
          
      - name: Build Solution
        if: matrix.check-tests == false && (matrix.check-sln == true || matrix.check-slnx == true)
        run: |
          Push-Location TestLibrary
          dotnet build
          dotnet pack --configuration Release -o ./NuGet

      - name: Build Project Only
        if: matrix.check-tests == false && matrix.check-sln == false && matrix.check-slnx == false
        run: |
          Push-Location TestLibrary/TestLibrary
          dotnet build
          dotnet pack --configuration Release -o ./NuGet
      
      - name: Build and Test Project Only
        if: matrix.check-tests == true && matrix.check-sln == false && matrix.check-slnx == false
        run: |
          Push-Location TestLibrary/TestLibrary
          dotnet build
          dotnet pack --configuration Release -o ./NuGet
          Pop-Location
          Push-Location TestLibrary/TestLibrary.Tests
          dotnet test

  test-avalonia:
    runs-on: windows-latest
    needs: build
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: "Default (slnx)"
            template-args: ""
            check-slnx: true
            check-sln: false
          - name: "Legacy sln format"
            template-args: "--sln true"
            check-slnx: false
            check-sln: true
          - name: "No solution"
            template-args: "--no-sln"
            check-slnx: false
            check-sln: false

    steps:
      - name: Download NuGet Artifacts
        uses: actions/download-artifact@v6
        with:
          name: NuGet

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Test Template - ${{ matrix.name }}
        run: |
          dotnet new install $(Get-ChildItem -Path "Keboo.Dotnet.Templates.*.nupkg").Name
          mkdir TestAvalonia
          Push-Location TestAvalonia
          dotnet new keboo.avalonia ${{ matrix.template-args }}
          
      - name: Verify slnx file exists
        if: matrix.check-slnx == true
        run: |
          if (-not (Test-Path "TestAvalonia/*.slnx")) {
            throw "Expected .slnx file not found"
          }
          Write-Host "Contents of .slnx file:"
          Get-Content TestAvalonia/*.slnx
          
      - name: Verify sln file exists
        if: matrix.check-sln == true
        run: |
          if (-not (Test-Path "TestAvalonia/*.sln")) {
            throw "Expected .sln file not found"
          }
          Write-Host "Contents of .sln file:"
          Get-Content TestAvalonia/*.sln
          
      - name: Build
        if: matrix.check-sln == true || matrix.check-slnx == true
        run: |
          Push-Location TestAvalonia
          dotnet workload restore
          dotnet build

  all-tests:
    name: All Tests Summary
    runs-on: ubuntu-latest
    needs: [test-console, test-wpf, test-library, test-avalonia]
    steps:
      - name: Summary
        run: echo "All tests completed successfully"

  automerge:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write
      contents: write

    steps:
      - uses: fastify/github-action-merge-dependabot@v3.11.2
        with:
          use-github-auto-merge: true

  push_nugets:
    if: ${{ github.event_name != 'pull_request' }}
    name: Push NuGets
    runs-on: ubuntu-latest
    needs: [build, test-console, test-wpf, test-library, test-avalonia]

    steps:
      - name: Download NuGet Artifacts
        uses: actions/download-artifact@v6
        with:
          name: NuGet

      - name: Push NuGets
        run: |
          dotnet nuget push *.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
