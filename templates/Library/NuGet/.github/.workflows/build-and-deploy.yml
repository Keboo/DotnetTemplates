name: Build and deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

defaults:
  run:
    shell: pwsh

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'
          include-prerelease: true

      - name: dotnet restore
        run: dotnet restre --configuration Release 

      - name: dotnet build
        run: dotnet build --configuration Release --no-restore 
#if (!no-tests)
      - name: dotnet test
        run: dotnet test --configuration Release --no-build --collect:"XPlat Code Coverage" --results-directory ./code-coverage

      - name: ReportGenerator
        uses: danielpalme/ReportGenerator-GitHub-Action@5.1.24
        with:
          reports: coverage/**/coverage.cobertura.xml
          targetdir: coveragereport
          reporttypes: Html;MarkdownSummaryGithub
          title: 'Code Coverage'
  
      - name: Write PR Number
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo ${{ github.event.number }} > ./coveragereport/PullRequestNumber
  
      - name: Upload Code Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: CodeCoverage
          path: coveragereport/
          if-no-files-found: error
#endif

      - name: dotnet pack
        run: dotnet pack --configuration Release --no-build -o .${{env.DOTNET_ROOT}}/NuGet

      - name: Upload NuGet artifact
        uses: actions/upload-artifact@v3
        with:
          name: NuGet
          path: ${{env.DOTNET_ROOT}}/NuGet

  automerge:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write
      contents: write

    steps:
      - uses: fastify/github-action-merge-dependabot@v3.6.2

  deploy-nuget:
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: NuGet

      - name: Push NuGet
        run: dotnet nuget push ${{ github.workspace }}/*nupkg --source https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }} --skip-duplicate
